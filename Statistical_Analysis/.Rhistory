labs(x = "", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
income3 = dataset %>%
filter(income_class == 3,
exposure >= 0 & exposure <= 0.01) %>%
ggplot() +
aes(x = "", y = exposure, group = phase) +
geom_boxplot() +
labs(x = "", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
income4 = dataset %>%
filter(income_class == 4,
exposure >= 0 & exposure <= 0.01) %>%
ggplot() +
aes(x = "", y = exposure, group = phase) +
geom_boxplot() +
labs(x = "", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
gridExtra::grid.arrange(income1, income2, income3, income4, ncol = 2,
left = "Exposure Risk",
top = "Note: 1,2,3,4 stands for phase 1 to 4 respectfully")
income1 = dataset %>%
filter(income_class == 1) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "", y = "") +
theme_classic() +
theme(aspect.ratio = 3) +
facet_grid(vars(), vars(phase))
income2 = dataset %>%
filter(income_class == 2) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "", y = "") +
theme_classic() +
theme(aspect.ratio = 3) +
facet_grid(vars(), vars(phase))
income3 = dataset %>%
filter(income_class == 3) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "", y = "") +
theme_classic() +
theme(aspect.ratio = 3) +
facet_grid(vars(), vars(phase))
income4 = dataset %>%
filter(income_class == 4) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "", y = "") +
theme_classic() +
theme(aspect.ratio = 3) +
facet_grid(vars(), vars(phase))
gridExtra::grid.arrange(income1, income2, income3, income4, ncol = 2,
left = "Estimate case density",
top = "Note: 1,2,3,4 stands for phase 1 to 4 respectfully")
income1 = dataset %>%
filter(income_class == 1) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
income2 = dataset %>%
filter(income_class == 2) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
income3 = dataset %>%
filter(income_class == 3) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
income4 = dataset %>%
filter(income_class == 4) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
gridExtra::grid.arrange(income1, income2, income3, income4, ncol = 2,
left = "Estimate case density",
top = "Note: 1,2,3,4 stands for phase 1 to 4 respectfully")
income1 = dataset %>%
filter(income_class == 1) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "0-25% income", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
income2 = dataset %>%
filter(income_class == 2) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "25-50% income", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
income3 = dataset %>%
filter(income_class == 3) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "50-75", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
income4 = dataset %>%
filter(income_class == 4) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "75-100% income", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
gridExtra::grid.arrange(income1, income2, income3, income4, ncol = 2,
left = "Estimate case density",
top = "Note: 1,2,3,4 stands for phase 1 to 4 respectfully")
income1 = dataset %>%
filter(income_class == 1) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "0-25% income", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
income2 = dataset %>%
filter(income_class == 2) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "25-50% income", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
income3 = dataset %>%
filter(income_class == 3) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "50-75% income", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
income4 = dataset %>%
filter(income_class == 4) %>%
ggplot() +
aes(x = "", y = case, group = phase) +
geom_boxplot() +
labs(x = "75-100% income", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
gridExtra::grid.arrange(income1, income2, income3, income4, ncol = 2,
left = "Estimate case density",
top = "Note: 1,2,3,4 stands for phase 1 to 4 respectfully")
income1 = dataset %>%
filter(income_class == 1,
exposure >= 0 & exposure <= 0.01) %>%
ggplot() +
aes(x = "", y = exposure, group = phase) +
geom_boxplot() +
labs(x = "0-25% income", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
income2 = dataset %>%
filter(income_class == 2,
exposure >= 0 & exposure <= 0.01) %>%
ggplot() +
aes(x = "", y = exposure, group = phase) +
geom_boxplot() +
labs(x = "25-50% income", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
income3 = dataset %>%
filter(income_class == 3,
exposure >= 0 & exposure <= 0.01) %>%
ggplot() +
aes(x = "", y = exposure, group = phase) +
geom_boxplot() +
labs(x = "50-75% income", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
income4 = dataset %>%
filter(income_class == 4,
exposure >= 0 & exposure <= 0.01) %>%
ggplot() +
aes(x = "", y = exposure, group = phase) +
geom_boxplot() +
labs(x = "75-100% income", y = "") +
theme_classic() +
theme(aspect.ratio = 2) +
facet_grid(vars(), vars(phase))
gridExtra::grid.arrange(income1, income2, income3, income4, ncol = 2,
left = "Exposure Risk",
top = "Note: 1,2,3,4 stands for phase 1 to 4 respectfully")
table = matrix(nrow=4,ncol=4)
for (i in 1:4){
x = ct_info_cases_data %>%
filter(income_class == i) %>%
select(estimate_cases1_density) %>%
mutate_if(is.numeric, function(x){x = replace_na(x, median(x, na.rm = TRUE))}) %>%
unlist(use.names = FALSE)
for (j in 1:4){
y = ct_info_cases_data %>%
filter(income_class == j) %>%
select(estimate_cases1_density) %>%
mutate_if(is.numeric, function(x){x = replace_na(x, median(x, na.rm = TRUE))}) %>%
unlist(use.names = FALSE)
table[i,j] = t.test(x, y, alternative = "less")[["p.value"]]
}}
# in case of population density, the cululative estimated cases density of group 1 is significant lower than that of group 4
# in case of population density, group 1 has
table
table = matrix(nrow=4,ncol=4)
for (i in 1:4){
x = ct_info_cases_data %>%
filter(income_class == i) %>%
select(estimate_cases2_density) %>%
mutate_if(is.numeric, function(x){x = replace_na(x, median(x, na.rm = TRUE))}) %>%
unlist(use.names = FALSE)
for (j in 1:4){
y = ct_info_cases_data %>%
filter(income_class == j) %>%
select(estimate_cases2_density) %>%
mutate_if(is.numeric, function(x){x = replace_na(x, median(x, na.rm = TRUE))}) %>%
unlist(use.names = FALSE)
table[i,j] = t.test(x, y, alternative = "less")[["p.value"]]
}}
# in case of population density, the cululative estimated cases density of group 1 is significant lower than that of group 4
# in case of population density, group 1 has
table
table = matrix(nrow=4,ncol=4)
for (i in 1:4){
x = ct_info_cases_data %>%
filter(income_class == i) %>%
select(estimate_cases3_density) %>%
mutate_if(is.numeric, function(x){x = replace_na(x, median(x, na.rm = TRUE))}) %>%
unlist(use.names = FALSE)
for (j in 1:4){
y = ct_info_cases_data %>%
filter(income_class == j) %>%
select(estimate_cases3_density) %>%
mutate_if(is.numeric, function(x){x = replace_na(x, median(x, na.rm = TRUE))}) %>%
unlist(use.names = FALSE)
table[i,j] = t.test(x, y, alternative = "less")[["p.value"]]
}}
# in case of population density, the cululative estimated cases density of group 1 is significant lower than that of group 4
# in case of population density, group 1 has
plot(ct_info_cases_data$exposure1,ct_info_cases_data$estimate_cases1_density)
plot(ct_info_cases_data$exposure1,ct_info_cases_data$estimate_cases1_density)
points(ct_info_cases_data$exposure1,ct_info_cases_data$estimate_cases1_density)
plot(ct_info_cases_data$exposure1,ct_info_cases_data$estimate_cases1_density)
points(ct_info_cases_data$exposure2,ct_info_cases_data$estimate_cases2_density)
plot(ct_info_cases_data$exposure1,ct_info_cases_data$estimate_cases1_density)
points(ct_info_cases_data$exposure2,ct_info_cases_data$estimate_cases2_density, col = "red")
points(ct_info_cases_data$exposure2,ct_info_cases_data$estimate_cases2_density, col = "red")
plot(ct_info_cases_data$exposure1,ct_info_cases_data$estimate_cases1_density)
points(ct_info_cases_data$exposure2,ct_info_cases_data$estimate_cases2_density, col = "red")
plot(ct_info_cases_data$exposure1,ct_info_cases_data$estimate_cases1_density,col="red")
points(ct_info_cases_data$exposure2,ct_info_cases_data$estimate_cases2_density)
plot(ct_info_cases_data$exposure1,ct_info_cases_data$estimate_cases1_density,col="red")
points(ct_info_cases_data$exposure2,ct_info_cases_data$estimate_cases2_density)
plots(ct_info_cases_data$exposure2,ct_info_cases_data$estimate_cases2_density)
plot(ct_info_cases_data$exposure2,ct_info_cases_data$estimate_cases2_density)
t
plot(ct_info_cases_data$exposure1,ct_info_cases_data$estimate_cases1_density,col="red")
plot(ct_info_cases_data$exposure2,ct_info_cases_data$estimate_cases2_density)
plot(ct_info_cases_data$exposure1,ct_info_cases_data$estimate_cases1_density,col="red")
plot(ct_info_cases_data$exposure2,ct_info_cases_data$estimate_cases2_density)
plot(ct_info_cases_data$exposure1,ct_info_cases_data$estimate_cases1_density,col="red")
plot(x = ct_info_cases_data$exposure2, y= ct_info_cases_data$estimate_cases2_density)
plot(ct_info_cases_data$exposure1,ct_info_cases_data$estimate_cases1_density,col="red")
points(x = ct_info_cases_data$exposure2, y= ct_info_cases_data$estimate_cases2_density)
plot(ct_info_cases_data$exposure1,ct_info_cases_data$estimate_cases1_density,col="red")
points(x = ct_info_cases_data$exposure2, y= ct_info_cases_data$estimate_cases2_density)
points(x = ct_info_cases_data$exposure3, y= ct_info_cases_data$estimate_cases3_density)
points(x = ct_info_cases_data$exposure4, y= ct_info_cases_data$estimate_cases4_density)
plot(ct_info_cases_data$exposure1,ct_info_cases_data$estimate_cases1_density,col="red")
points(x = c(3, 3), y = c(3, 3))
points(x = ct_info_cases_data$exposure3, y= ct_info_cases_data$estimate_cases3_density)
points(x = ct_info_cases_data$exposure4, y= ct_info_cases_data$estimate_cases4_density)
plot(ct_info_cases_data$exposure1,ct_info_cases_data$estimate_cases1_density,col="red")
points(x = c(3, 3), y = c(3, 3))
plot(by_phase$exposure, by_phase#case)
plot(by_phase$exposure, by_phase$case)
plot(by_phase$exposure, by_phase$case)
by_phase$case
by_phase$exposure
n = nrow(ct_info_cases_data)
by_phase = matrix(NA, nrow = n*4, ncol = 5)
by_phase[1:n,1] = ct_info_cases_data$exposure1
by_phase[1:n,2] = ct_info_cases_data$estimate_cases1_density
by_phase[1:n,3] = ct_info_cases_data$pop_density_class
by_phase[1:n,4] = ct_info_cases_data$income_class
by_phase[1:n,5] = 1
by_phase[(n+1):(2*n),1] = ct_info_cases_data$exposure2
by_phase[(n+1):(2*n),2] = ct_info_cases_data$estimate_cases2_density
by_phase[(n+1):(2*n),3] = ct_info_cases_data$pop_density_class
by_phase[(n+1):(2*n),4] = ct_info_cases_data$income_class
by_phase[(n+1):(2*n),5] = 2
by_phase[(2*n+1):(3*n),1] = ct_info_cases_data$exposure3
by_phase[(2*n+1):(3*n),2] = ct_info_cases_data$estimate_cases3_density
by_phase[(2*n+1):(3*n),3] = ct_info_cases_data$pop_density_class
by_phase[(2*n+1):(3*n),4] = ct_info_cases_data$income_class
by_phase[(2*n+1):(3*n),5] = 3
by_phase[(3*n+1):(4*n),1] = ct_info_cases_data$exposure4
by_phase[(3*n+1):(4*n),2] = ct_info_cases_data$estimate_cases4_density
by_phase[(3*n+1):(4*n),3] = ct_info_cases_data$pop_density_class
by_phase[(3*n+1):(4*n),4] = ct_info_cases_data$income_class
by_phase[(3*n+1):(4*n),5] = 4
dataset = data.frame(by_phase)
colnames(dataset) = c("exposure", "case", "pop_density_class", "income_class","phase")
plot(by_phase$exposure, by_phase$case)
by_phase
plot(dataset$exposure, dataset$case)
?plot
plot(dataset$exposure, dataset$case, col=)
?plot
dataset[which(dataset[,"exposure"] == 1), 2:3]
which(dataset[,"exposure"] == 1)
dataset[,"exposure"]
d4 = dataset[which(dataset[,"income_class"] == 1), 2:3]
dataset[,"income_class"] == 1)
which(dataset[,"income_class"] == 1)
dataset[which(dataset[,"income_class"] == 1), 2:3]
income1 = dataset[which(dataset[,"income_class"] == 1), c("case", "exposure")]
plot(income1$case, income2$exposure, col = "darkblue", pch = 18,
# xlim = c(-2,2.5), ylim = c(-2,2.5),
xlab = "", ylab = "", )
plot(income1$case, income2$exposure, col = "darkblue", pch = 18,
# xlim = c(-2,2.5), ylim = c(-2,2.5),
xlab = "", ylab = "", )
income1 = dataset[which(dataset[,"income_class"] == 1), c("case", "exposure")]
income2 = dataset[which(dataset[,"income_class"] == 2), c("case", "exposure")]
income3 = dataset[which(dataset[,"income_class"] == 3), c("case", "exposure")]
income4 = dataset[which(dataset[,"income_class"] == 4), c("case", "exposure")]
plot(income1$case, income1$exposure, col = "darkblue", pch = 18,
# xlim = c(-2,2.5), ylim = c(-2,2.5),
xlab = "", ylab = "", )
points(income2$case, income2$exposure, col = "lightblue", pch = 18)
legend("topleft",legend = c("2","4"), col = c("darkblue", "lightblue"), pch = 18)
points(income2$case, income2$exposure, col = "lightblue", pch = 18)
income1 = dataset[which(dataset[,"income_class"] == 1), c("case", "exposure")]
income2 = dataset[which(dataset[,"income_class"] == 2), c("case", "exposure")]
income3 = dataset[which(dataset[,"income_class"] == 3), c("case", "exposure")]
income4 = dataset[which(dataset[,"income_class"] == 4), c("case", "exposure")]
plot(income1$case, income1$exposure, col = "darkblue", pch = 18,
# xlim = c(-2,2.5), ylim = c(-2,2.5),
xlab = "", ylab = "", )
points(income2$case, income2$exposure, col = "lightblue", pch = 18)
points(income3$case, income3$exposure, col = "red", pch = 18)
points(income4$case, income4$exposure, col = "green", pch = 18)
legend("topleft",legend = c("2","4"), col = c("darkblue", "lightblue"), pch = 18)
income1 = dataset[which(dataset[,"income_class"] == 1), c("case", "exposure")]
income2 = dataset[which(dataset[,"income_class"] == 2), c("case", "exposure")]
income3 = dataset[which(dataset[,"income_class"] == 3), c("case", "exposure")]
income4 = dataset[which(dataset[,"income_class"] == 4), c("case", "exposure")]
plot(income1$case, income1$exposure, col = "darkblue", pch = 18,
# xlim = c(-2,2.5), ylim = c(-2,2.5),
xlab = "", ylab = "", )
points(income2$case, income2$exposure, col = "lightblue", pch = 18)
points(income3$case, income3$exposure, col = "red", pch = 18)
points(income4$case, income4$exposure, col = "green", pch = 18)
legend("topleft",legend = c("1","2", "3","4"), col = c("darkblue", "lightblue", "red", "green"), pch = 18)
income1 = dataset[which(dataset[,"income_class"] == 1), c("case", "exposure")]
income2 = dataset[which(dataset[,"income_class"] == 2), c("case", "exposure")]
income3 = dataset[which(dataset[,"income_class"] == 3), c("case", "exposure")]
income4 = dataset[which(dataset[,"income_class"] == 4), c("case", "exposure")]
plot(income1$case, income1$exposure, col = "darkblue", pch = 18,
# xlim = c(-2,2.5), ylim = c(-2,2.5),
xlab = "case", ylab = "exposure", )
points(income2$case, income2$exposure, col = "lightblue", pch = 18)
points(income3$case, income3$exposure, col = "red", pch = 18)
points(income4$case, income4$exposure, col = "green", pch = 18)
legend("topleft",legend = c("1","2", "3","4"), col = c("darkblue", "lightblue", "red", "green"), pch = 18)
plot(ct_info_cases_data$exposure1, ct_info_cases_data$estimate_cases1_density)
plot(ct_info_cases_data$exposure2, ct_info_cases_data$estimate_cases2_density)
plot(ct_info_cases_data$exposure2, ct_info_cases_data$estimate_cases3_density)
plot(ct_info_cases_data$exposure3, ct_info_cases_data$estimate_cases3_density)
plot(ct_info_cases_data$exposure4, ct_info_cases_data$estimate_cases4_density)
income1 = dataset[which(dataset[,"income_class"] == 1), c("case", "exposure")]
income2 = dataset[which(dataset[,"income_class"] == 2), c("case", "exposure")]
income3 = dataset[which(dataset[,"income_class"] == 3), c("case", "exposure")]
income4 = dataset[which(dataset[,"income_class"] == 4), c("case", "exposure")]
plot(income1$case, income1$exposure, col = "darkblue", pch = 18,
# xlim = c(-2,2.5), ylim = c(-2,2.5),
xlab = "case", ylab = "exposure", )
points(income2$case, income2$exposure, col = "lightblue", pch = 18)
points(income3$case, income3$exposure, col = "red", pch = 18)
points(income4$case, income4$exposure, col = "green", pch = 18)
legend("topleft",legend = c("1","2", "3","4"), col = c("darkblue", "lightblue", "red", "green"), pch = 18)
dataset
income1 = dataset[which(dataset[,"income_class"] == 1), c("case", "exposure")]
income2 = dataset[which(dataset[,"income_class"] == 2), c("case", "exposure")]
income3 = dataset[which(dataset[,"income_class"] == 3), c("case", "exposure")]
income4 = dataset[which(dataset[,"income_class"] == 4), c("case", "exposure")]
plot(income1$case, income1$exposure, col = "darkblue", pch = 18,
# xlim = c(-2,2.5), ylim = c(-2,2.5),
xlab = "case", ylab = "exposure", )
points(income2$case, income2$exposure, col = "lightblue", pch = 18)
points(income3$case, income3$exposure, col = "red", pch = 18)
points(income4$case, income4$exposure, col = "green", pch = 18)
legend("topleft",legend = c("1","2", "3","4"), col = c("darkblue", "lightblue", "red", "green"), pch = 18)
knitr::opts_chunk$set(echo = TRUE)
ct_info_cases_data = ct_info_data %>%
left_join(IL_phrases_cases_data, by = "countyFIPS") %>%
left_join(ct_income_data, by = "GEOID")  %>%
left_join(exposure_data, by = "GEOID")
ct_info_data = read.csv("data/ct_info_df.csv") %>%
rename(countyFIPS= FIPS)
library(tidyverse)
library(plotly)
ct_info_data = read.csv("data/ct_info_df.csv") %>%
rename(countyFIPS= FIPS)
IL_cases_data = read.csv("data/IL_cases_data.csv")
IL_deaths_data = read.csv("data/IL_deaths_data.csv")
ct_income_data = read.csv("data/ct_income_data.csv")
# ct_income_data = read.csv("data/IL_cases_data.csv")
ct_info_data
IL_cases_data
IL_phrases_cases_data = IL_cases_data[c("countyFIPS","X.Cases_03.20.2020", "X.Cases_05.30.2020", "X.Cases_06.30.2020", "X.Cases_11.01.2020")]
colnames(IL_phrases_cases_data) = c("countyFIPS", "cases1","cases2","cases3","cases4")
IL_phrases_cases_data
write.csv(IL_phrases_cases_data,"data/IL_phrases_cases_data.csv")
IL_phrases_deaths_data = IL_deaths_data[c("countyFIPS","X.Deaths_03.20.2020", "X.Deaths_05.30.2020", "X.Deaths_06.30.2020", "X.Deaths_11.01.2020")]
colnames(IL_phrases_deaths_data) = c("countyFIPS", "deaths1","deaths2","deaths3","deaths4")
IL_phrases_deaths_data
write.csv(IL_phrases_cases_data,"data/IL_phrases_deaths_data.csv")
IL_phases_data = IL_phrases_cases_data %>%
left_join( IL_phrases_deaths_data, by = "countyFIPS") %>%
mutate(active_cases1 = cases1 - deaths1,
active_cases2 = cases2 - deaths2,
active_cases3 = cases3 - deaths3,
active_cases4 = cases4 - deaths4) %>%
select(countyFIPS, active_cases1, active_cases2, active_cases3, active_cases4)
IL_phrases_cases_data = IL_phases_data %>%
rename(cases1 = active_cases1,
cases2 = active_cases2,
cases3 = active_cases3,
cases4 = active_cases4)
exposure_data = read.csv("/Users/zhangyuqi/Documents/NCSA/Exposure_Risk_Analysis_in Rural_Illinois/Streetlight_Data/clean_data/dptotal/dptotal_exposure_df.csv")
# exposure_data = read.csv("../Streetlight_Data/clean_data/exposure_df.csv")
#exposure_data = read_csv("data/exposure_df.csv")
exposure_data = exposure_data %>%
rename(GEOID = FIPS)
ct_info_cases_data = ct_info_data %>%
left_join(IL_phrases_cases_data, by = "countyFIPS") %>%
left_join(ct_income_data, by = "GEOID")  %>%
left_join(exposure_data, by = "GEOID")
ct_info_cases_data = ct_info_data %>%
left_join(IL_phrases_cases_data, by = "countyFIPS") %>%
left_join(ct_income_data, by = "GEOID") %>%
left_join(exposure_data, by = "GEOID") %>%
left_join(ct_info_cases_data %>%
group_by(countyFIPS) %>%
summarise(county_pop = sum(POPULATION)), by="countyFIPS") %>%
mutate(estimate_cases1 = cases1*POPULATION/county_pop,
estimate_cases2 = cases2*POPULATION/county_pop,
estimate_cases3 = cases3*POPULATION/county_pop,
estimate_cases4 = cases4*POPULATION/county_pop,
estimate_cases1_density = estimate_cases1/Shape_Area,
estimate_cases2_density = estimate_cases2/Shape_Area,
estimate_cases3_density = estimate_cases3/Shape_Area,
estimate_cases4_density = estimate_cases4/Shape_Area,
pop_density_class = as_factor(case_when(
POPULATION < quantile(POPULATION,0.25) ~ "1",
POPULATION >= quantile(POPULATION,0.25) &  POPULATION < quantile(POPULATION,0.5) ~ "2",
POPULATION >= quantile(POPULATION,0.5) &  POPULATION < quantile(POPULATION,0.75) ~ "3",
POPULATION >= quantile(POPULATION,0.75) ~ "4",
)),
income_class = as_factor(case_when(
income < quantile(income,0.25) ~ "1",
income >= quantile(income,0.25) &  income < quantile(income,0.5) ~ "2",
income >= quantile(income,0.5) &  income < quantile(income, 0.75) ~ "3",
income >= quantile(income,0.75) ~ "4",
))
)
# extimated_cases4: replace missing value with 0
miss_idx = is.na(ct_info_cases_data$estimate_cases4)
ct_info_cases_data$estimate_cases4[miss_idx] = 0
write.csv(ct_info_cases_data,"data/ct_info_cases_data.csv")
